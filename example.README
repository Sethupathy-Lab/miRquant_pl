Prerequisites: 
*hg19 or mm9 genome in $JB_GENOME_DIR
*A file with the chromosome sizes in the same directory: use the following command to genrate:
mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A -e "select chrom, size from hg19.chromInfo"  > hg19.chromSizes
mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A -e "select chrom, size from mm9.chromInfo"  > mm9.chromSizes

New genome (example rn4):
tRNA files need to be generated from the genomic tRNA database (http://gtrnadb.ucsc.edu/)
bedfile: mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A -e "select chrom, chromStart, chromEnd, name, score, strand from rn4.tRNAs"  > rn4_tRNA.bed
bed12: (http://gtrnadb.ucsc.edu/Rnorv/Rnorv-by-locus-txt.html) copy from text version of the tRNAs by locus page of the genomic tRNA database (rn4_tRNA.txt - tab delim)
then run scripts/parse_tRNA.pl rn4_tRNA.bed rn4_tRNA.txt > rn4_tRNA12.bed
mature tRNA file: 
fastaFromBed -s -split -fi ../genome/rn4.fa -bed rn4_tRNA12.bed -s rn4_mature_tRNA_LIB.fa

miRBase files need to be generated for the new genome: 
0: download mature.fa, hairpin.fa and gff file from miRBase (http://www.mirbase.org/ftp.shtml). Make sure you use the appropriate genome with your miRBase files (the gff file lists the genome).
1: generate rno_mature.fa: scripts/mirBaseFa2mmuOther.pl mature.fa rno
2: generate rno_hairpin.fa: scripts/mirBaseFa2mmuOther.pl hairpin.fa rno
3: generate rno_table.txt: scripts/make_ann_table.pl ../rno.gff3 ../rno_mature.fa ../rno_hairpin.fa rno_table.txt
4: generate rno_tableL.bed: scripts/gen_table_mirLoc.pl rno_table.txt > rno_tableL.bed

Get gene anotations:
mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A -e "select chrom, txStart, txEnd, name2, exonCount, strand from rn4.refGene" >rn4_ref.bed

Example call:

source uncENV.sh
bsub -o logName chainSubmission.sh 24 2 hsa QUAL GSFile /proj/seth_lab/smallRNA/BC_data/Results_1/Jzmicro_1_ATCACG_L008_R1_001.fq

24: min overlap of adaptor in cut adapt
2: number of mismatches allowed in adaptor
hsa: genome to use (hsa or mmu)
QUAL: 33 or 64 phred 
GSFile: NoGS if no file or full path to file containging GS reads
fullpath.fq: full path to fq file containing raw reads.  A file with the 3' adaptor must be present with the same filename and the extension filename.adaptor


After completion: you should have a sub directory called IntermediateResults/g1Results in the directory with the above fq file.
Inside the g1Results directory you will have CHR#.resutls files and CHR# directories. 
The files contain the Exact match results (Bowtie), and the directories contain the non-exact results (Shrimp2).  
There are a lot of files in the directories and ls takes a long time.  
Try 'ls -f' if you want to see the file names. 
Each file in the sub-directories contains all matches within a window of that chromosome.  
ex: CHR3/CHR3:12606068-12606095(+).results contains matches to the region of CHR3 defined by the coordinates in the file name.

You dont really need to look at any of these files: instead run the runC.sh script to collect the files into usable results.
#example call: ./runC.sh hsa /fullpathToDir/g1Results/CHR*.results

This will create txt files in the g1Results directory containing the collected results for all stacks of reads > 10.
5p_summary.txt * 5'-end differences -> legacy file not useful
3p_summary.txt * 3'-end differences
ed_summary.txt * central differences
lenDist_summary.txt * length differences
shift_summary.txt * offset info -> legacy file not useful
Shrimp_results.bed ** bed file containing all results


To get Tab seperated files to import into excel:

Use the summary2Tab_clust.pl script

example call: summary2Tab_clust.pl lenDist_summary.txt 0 hsa [0/1]

lenDist_summary.txt:  file to convert
0: sort order this is the only option currently working
hsa: genome to use for annotations (hsa or mmu)
[0/1]: toggle if you want only tRNA/miRNA output [0], or default all [1] outputs
A vb script is included to automatically format these files in excel.  Import miRNA.vb into your personal macro workbook and run on imported TAB_*.txt worksheets to format sheets.

To get a pileup of TDRs, run the ldTab2RNApu.pl script:

example call: ldTab2tRNApu.pl TAB_lenDist_summary.txt hsa 
Currently this script only works on the lenDist output, though that may change in the future.
An R script is included which generates a pile up diagram for all outputs (requires ggplot2 library).
example: 
rnaPU<-genPileUp('R-PileUp.txt')
rnaPU
dnaPU<-genPileUp('D-PileUp.txt')
dnaPU
